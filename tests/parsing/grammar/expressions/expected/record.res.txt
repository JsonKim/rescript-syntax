let r = { a = expr }
let r = { a = expr }
let r = { Parsetree.pexp_attributes = [||]; Parsetree.loc = loc }
let r = { a; b; c }
let r = { A.a = a; b }
let r = { A.a = a; b; C.c = c }
let r = { Parsetree.pexp_attributes = pexp_attributes; Parsetree.loc = loc }
let r = { Parsetree.pexp_attributes = pexp_attributes; Parsetree.loc = loc }
let r = { a = (expr : int); b = (x : string) }
let r = { expr with pexp_attributes = [||] }
let r = { expr with pexp_attributes = [||]; pexp_loc = loc }
let r = { expr with pexp_attributes = [||] }
let r = { (make () : myRecord) with foo = bar }
let r = { (make () : myRecord) with foo = bar }
let r =
  {
    x = ((None)[@optional ]);
    y = ((None)[@ns.optional ]);
    z = (((None : tt))[@optional ])
  }
let z name = { name = ((name)[@optional ]); x = 3 }
let z name = { name = ((name)[@optional ]); x = 3 }
let z name = { name; x = ((x)[@optional ]) }
let zz name = { name; x = ((x)[@ns.optional ]) }
let _ =
  match z with
  | { x = ((None)[@optional ]); y = ((None)[@optional ]);
      z = (((None : tt))[@optional ]) } -> 11
  | { name = ((name)[@optional ]); x = 3 } -> 42
  | { name = ((name)[@optional ]); x = 3 } -> 4242
  | { x = ((None)[@ns.optional ]); y = ((None)[@ns.optional ]);
      z = (((None : tt))[@ns.optional ]) } -> 11
  | { name = ((name)[@ns.optional ]); x = 3 } -> 42
  | { name = ((name)[@ns.optional ]); x = 3 } -> 4242